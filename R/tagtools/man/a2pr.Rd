% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/a2pr.R
\name{a2pr}
\alias{a2pr}
\title{Pitch and roll estimation from triaxial accelerometer data.}
\usage{
a2pr(A, fs, fc)
}
\arguments{
\item{A}{An nx3 acceleration matrix with columns [ax ay az]. Acceleration can be in any consistent unit, e.g., g or m/s^2.}

\item{fs}{The sampling rate of the sensor data in Hz (samples per second). This is only needed if filtering is required.}

\item{fc}{(optional) The cut-off frequency of a low-pass filter to apply to A before computing pitch and roll. The filter cut-off frequency is in Hertz. The filter length is 4*fs/fc. Filtering adds no group delay. If fc is not specified, no filtering is performed.}
}
\value{
p The pitch estimate in radians

r The roll estimate in radians
}
\description{
This is a non-iterative estimator with |pitch| constrained to <= 90 degrees. The pitch and roll estimates give the least-square-norm error between A and the A-vector that would be measured at the estimated pitch and roll. If A is in the animal frame, the resulting pitch and roll define the orientation of the animal with respect to its navigation frame. If A is in the tag frame, the pitch and roll will define the tag orientation with respect to its navigation frame.
}
\note{
Output sampling rate is the same as the input sampling rate.

Frame: This function assumes a [north,east,up] navigation frame and a [forward,right,up] local frame. In these frames, a positive pitch angle is an anti-clockwise rotation around the y-axis. A positive roll angle is a clockwise rotation around the x-axis. A descending animal will have a negative pitch angle while an animal rolled with its right side up will have a positive roll angle.
}
\examples{
samplematrix <- matrix(c(0.77, -0.6, -0.22, 0.45, -0.32, 0.99, 0.2, -0.56, 0.5), 
                       byrow = TRUE, nrow = 3)
                a2pr(samplematrix)
#Returns: p = c(0.8780579, 0.4082165, 0.2603593) 
#         r = c(-1.9222411, -0.3126323, -0.8419416) 
#         v = c(1.000650, 1.133578, 0.776917)
}
