\documentclass[12pt]{article}
\usepackage{amsmath}
\usepackage{epsfig}
\usepackage{epsf}
\usepackage{graphics}
\usepackage{graphicx}
\usepackage{rotating}
%\usepackage{C:\Program Files\R\R-2.15.0\share\texmf\tex\latex\Sweave}
\usepackage{natbib}
\usepackage[T1]{fontenc}
\usepackage{enumitem}

\begin{document}

\begin{center}
{\Large Prediction plots for \textit{Ziphius} GAMMs}

\bigskip



{\large Greg Schorr, Erin Falcone, David Moretti, Stephanie Watwood, Alex Zerbini, Stacy DeRuiter, and others}
\bigskip

\end{center}

Version Dated:~\today

\bigskip
%\rule{\linewidth}{1mm}
\rule[0cm]{12.7cm}{0.1cm} \vspace{-0.5cm} \tableofcontents
%\rule{\linewidth}{0.5mm}
%\rule[raise-height]{width}{height}
\rule[0cm]{12.7cm}{0.05cm} \vspace{-0.5cm}
\begin{center}
\rule[0cm]{7cm}{0.05cm}
\end{center}

\bigskip

<<opts, message=FALSE, error=FALSE>>=
  #set knitr (report generation) options
  opts_chunk$set(fig.path='figs/Predictions-', echo=TRUE, results="markup", message=FALSE, warning=FALSE, error=FALSE,fig.pos="htb", fig.width=6.5, fig.height=5, dev=c("pdf", "jpeg"), dpi=300, cache=FALSE, fig.env="figure", size="scriptsize" )
#set R options (page width, significant figures for date-times)
options(width=70, digits.secs=3)
#load required R packages
require(RColorBrewer)
require(xtable)
require(lubridate)
require(gamm4)
require(MuMIn)
require(ggplot2)
require(gridExtra)
require(stringr)
#uncomment the following line for grey background in figures:
#theme_set(theme_gray(base_size = 20))
#uncomment the following line for white background in figures:
theme_set(theme_bw(base_size = 20))
@


<<getBaseline>>=
getBaseline <- function(dataframe){
  #get baseline values for model predictions from a data frame.
  # for factors, take the most common level
  # for continuous variables, take the median (could add other options like mean...)
  vals <- dataframe[1,]
  vtypes <- sapply(dataframe,class)
  for (c in 1:ncol(dataframe)){
    if (vtypes[c]=='factor' | vtypes[c] == 'logical'){
      #for factors, take the most commonly observed level
      tt <- table(vals[,c])
      vals[1,c] <- names(which.max(tt)) 
    }else{
      #for continuous take the data median
      vals[1,c] <- median(dataframe[,c], na.rm=T)
    }
  }
  return(vals)
}

@

<<plotPredictions>>=
plotPredictions <- function(modelOrDredge, x, inputData, prettyXName,
                            prettyYName, ylims, xlims=NULL, ...){
  dots <- list(...)
  if (sum(class(modelOrDredge)=='model.selection') > 0){
    bestModel <- eval(getCall(modelOrDredge,1))
  }else{
    bestModel <- modelOrDredge
  }
  xind <- which(names(inputData)==x)
  if (length(xind)==0 & grepl('SonarPresence', x)){
    inputData$SonarPresence <- gl(4, nrow(inputData)/4, length=nrow(inputData),
                                  labels=c('None', 'Sonar A', 'Sonar B', 'Both'))
    xind <- which(names(inputData)==x)
  }
  if (grepl('SonarPresence', x)){
    xvals <- levels(inputData[,xind])
    if (grepl('Dur', x)){
      xind2 <- which(names(inputData)=='DurAvg')
      xdat2 <- inputData[,xind2]; xdat2 <- na.omit(xdat2)
      xvals2 <- seq(from=min(xdat2),
                 to = max(xdat2),
                 length.out=500)
    }
  }else{
    xdat <- inputData[,xind]; xdat <- na.omit(xdat)
    xvals <- seq(from=min(xdat),
                 to = max(xdat),
                 length.out=500)
  }
  if (x == 'SonarPresence:Dur'){
    preddata <- data.frame(DurAvg = rep(xvals2, 4))
    preddata$SonarPresence <- gl(4, nrow(preddata)/4, 
                                 labels=c('None', 'Sonar A', 'Sonar B', 'Both'))
    preddata[,3:(2+ncol(inputData))] <- getBaseline(inputData[,-xind2])
    bye <- which(names(preddata)=='SonarPresence.1')
    preddata <- preddata[ , -bye]
  }else{
    preddata <- data.frame(xname = xvals)
    names(preddata) <- names(inputData)[xind]
    preddata[,2:(1+ncol(inputData))] <- getBaseline(inputData[,-xind])
  }
  if (grepl("SonarPresence", x)){
    #re-order levels of SonarPresence to something sensible
    preddata$SonarPresence <- factor(preddata$SonarPresence)
    preddata$SonarPresence <- relevel(preddata$SonarPresence,ref="Sonar B")
    preddata$SonarPresence <- relevel(preddata$SonarPresence,ref="Sonar A")
    preddata$SonarPresence <- relevel(preddata$SonarPresence,ref="None")
    preddata[preddata$SonarPresence=='Sonar A' |
               preddata$SonarPresence=='Both', "SonarA"] <- 1
    preddata[preddata$SonarPresence=='Sonar B' | 
               preddata$SonarPresence=='Both', "SonarB"] <- 1
    if (exists("inputData$SonarAPercOL.fill")){
    preddata[preddata$SonarPresence=='Sonar A' |
               preddata$SonarPresence=='Both', "SonarAPercOL.fill"] <-
      median(d$SonarAPercOL.fill[d$SonarAPercOL.fill > 0])
    preddata[preddata$SonarPresence=='Sonar B' |
               preddata$SonarPresence=='Both', "SonarBPercOL.fill"] <-
      median(d$SonarBPercOL.fill[d$SonarBPercOL.fill > 0])
    }
  }
  if (grepl('MinKm.fill',x)){
    preddata[preddata$SonarAMinKm.fill < 500 , "SonarA"] <- 1
    preddata[preddata$SonarBMinKm.fill < 500 , "SonarB"] <- 1
    if (exists("inputData$SonarAPercOL.fill")){
    preddata[preddata$SonarA==1 , "SonarAPercOL.fill"] <-
      median(d$SonarAPercOL.fill[d$SonarAPercOL.fill > 0])
    preddata[preddata$SonarB==1, "SonarBPercOL.fill"] <-
      median(d$SonarBPercOL.fill[d$SonarBPercOL.fill > 0])
    }
  }
  preds <- data.frame(predict(bestModel$gam, newdata=preddata, 
                   type='response', se.fit=TRUE))
  #undo scaling of response variable if it was done
  if (grepl("^scale", formula(bestModel$gam)[2])){
    resp.ind <- str_detect(as.character(formula(bestModel$gam)[2]),
                           names(inputData))
    resp <- na.omit(inputData[,resp.ind])
    preds <- preds * sqrt(sum(resp^2)/(length(resp)-1))
  }
  preds <- cbind(preds, preddata)
  if (x=='SonarPresence:Dur'){
    myplot <- ggplot(preds, aes_string(names(preds)[3], 
                                       y="fit")) + 
        geom_line() + 
        geom_ribbon(data=preds, aes(ymin=fit-2*se.fit,ymax=fit+2*se.fit),
                    alpha=0.3)+ facet_wrap(~SonarPresence) +
      theme(strip.text.x = element_text(size = 16)) +
        ylab(prettyYName) + xlab(prettyXName)
    
    myplot3 <- ggplot(preds, aes_string(names(preds)[3], 
                                        y="fit", group='SonarPresence',
                                        colour='SonarPresence')) + 
         geom_line() + scale_colour_discrete(name="Sonar: ") +
      theme(legend.title = element_text(size=14),
            legend.text = element_text(size = 10),
            legend.position="top") +
      ylab(prettyYName) + xlab(prettyXName)
  }else{
    if (class(inputData[,xind]) == 'factor'){
      myplot <- ggplot(preds, aes_string(names(preds)[3], y="fit")) + 
        geom_point() +
        geom_errorbar(aes(ymin=fit-2*se.fit, ymax=fit+2*se.fit), width=.1) +
        ylab(prettyYName) + xlab(prettyXName) + scale_y_continuous(limits=ylims)
    }else{
      #for contin make a line plot with shaded region for CI
      myplot <- ggplot(preds, aes_string(names(preds)[3], y="fit")) + 
        geom_line() +
        geom_ribbon(data=preds, aes(ymin=fit-2*se.fit,ymax=fit+2*se.fit),
                    alpha=0.3)+
        ylab(prettyYName) + xlab(prettyXName) + scale_y_continuous(limits=ylims)
    }}
  if (grepl('MinKm.fill',x)){
    if (is.null(xlims)) {myplot <- myplot + xlim(0,max(xdat[xdat < 500]))
    }else{myplot <- myplot + xlim(xlims)}
    p2 <- preds[preds[,3] == 500,]
    c <- ggplot_build(myplot)
    #yl <- c$panel$ranges[[1]]$y.range
    ybr <- c$panel$ranges[[1]]$y.major_source
    myplot2 <- ggplot(p2, aes_string(names(p2)[3], y="fit")) + 
      geom_point() + scale_y_continuous(limits=ylims, breaks=ybr) + 
      #theme(axis.text = element_blank()) + 
      scale_x_continuous(breaks = 500, labels='') +
    geom_errorbar(aes(ymin=fit-2*se.fit, ymax=fit+2*se.fit), width=.1) +
      ylab(' ') + 
      xlab('No\nSonar') 
  }else{myplot2 <- NULL}
  
  if (!exists("myplot3")){myplot3 <- NULL}
  return(list(myplot=myplot,myplot2=myplot2,myplot3=myplot3,preds=preds))  
}
@

\section{Non-foraging dives}
\subsection{Duration as response variable}

Prep data for plotting, Sonar A range effect:
<<NFD_dur_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcNFD_GAMM.RData")
NFD.A <- plotPredictions(modelOrDredge=model.seln,
                        x='SonarAMinKm.fill', inputData=d, 
                        prettyXName='Range to Nearest\nSonar A (km)',
                        prettyYName='Non-Foraging Dive\nDuration (min.)', ylims=c(18,30))
@

Report the values used for all input variables OTHER than Sonar A. For sonar-related variables, values of related variables were adjusted to make sure only realistic combinations were included.  For example, if SonarPresence was 'both', then SonarA and SonarB were both 1, and SonarAPercOL.fill and SonarBPercOL.fill were set to the median of all measured (less than 500km) values.  For other variables, the values were set to the most commonly observed value (for categorical predictors) or the median value (foor continuous predictors).

<<>>=
NFD.A$preds[1,]
@


<<NFD_dur_SonarAPlot1, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of range to nearest Sonar A operation, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Shaded region shows 95 percent confidence interval.'>>=
print(NFD.A$myplot)
@
Figure \ref{fig:NFD_dur_SonarAPlot1} shows a plot of the effect of range to Sonar A on Duration.

\clearpage
<<NFD_dur_SonarAPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted dive duration as a function of range to nearest Sonar A operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(NFD.A$myplot, NFD.A$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:NFD_dur_SonarAPlot2} shows a plot of effect of range to Sonar A on Duration, also showing no Sonar.


Prep data for plotting, Sonar B range effect:
<<NFD_dur_prepSonarB>>=
NFD.B <- plotPredictions(model.seln, 'SonarBMinKm.fill', d, 
                            'Range to Nearest\nSonar B (km)',
                            'Non-Foraging Dive\nDuration (min.)', ylims=c(9,28))
@


<<NFD_dur_SonarBPlot1, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(NFD.B$myplot)
@
\clearpage
Figure \ref{fig:NFD_dur_SonarBPlot1} shows a plot of the effect of range to Sonar B on Duration.



<<NFD_dur_SonarBPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted dive duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(NFD.B$myplot, NFD.B$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:NFD_dur_SonarBPlot2} shows a plot of the effect of range to Sonar B on Duration also including no Sonar.

\subsection{Duration as response variable, On-range data only}

Prep data for plotting. Best model includes on/off sonar effects.
<<NFD_dur_onrange_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcNFD_GAMM_OnRange.RData")
NFD.range.A <- plotPredictions(modelOrDredge=model.seln,
                        x='SonarPresence', inputData=d, 
                        prettyXName='Sonar in Operation',
                        prettyYName='Non-Foraging Dive Duration (min.)', 
                        ylims=c(20,31))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
NFD.range.A$preds
@


<<NFD_dur_onrange_SonarPresencePlot, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of sonar operations, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Error bars show 95 percent confidence intervals.'>>=
print(NFD.range.A$myplot)
@
Figure \ref{fig:NFD_dur_onrange_SonarPresencePlot} shows a plot of the effect of range to Sonar A on non-foraging dive duration (on-range data only).

\clearpage

\subsection{Depth as response variable}

Prep data for plotting, on/off sonar effect with interaction between duration and sonar:
<<NFD_depth_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcNFD_GAMM_Depth.RData")
NFD.depth.A <- plotPredictions(modelOrDredge=model.seln2,
                        x='SonarPresence:Dur', inputData=d, 
                        prettyXName='Duration (min.)',
                        prettyYName='Non-Foraging Dive Depth (m)', 
                        ylims=c(0,850))
@

<<NFD_depth_SonarPresencePlot, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of duration and sonar operations, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Error bars show 95 percent confidence intervals.'>>=
print(NFD.depth.A$myplot)
@

<<NFD_depth_SonarPresencePlot2, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of duration and sonar operations, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)'>>=
print(NFD.depth.A$myplot3)
@

\subsection{Depth as response variable, On-range data only}
Prep data for plotting, on/off sonar effect with interaction between duration and sonar:
<<NFD_depth_onrange_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcNFD_GAMM_Depth_OnRange.RData")
NFD.depth.range.A <- plotPredictions(modelOrDredge=model.seln2,
                        x='SonarPresence:Dur', inputData=d, 
                        prettyXName='Duration (min.)',
                        prettyYName='Non-Foraging Dive Depth (m)', 
                        ylims=c(0,850))
@

<<NFD_depth_onrange_SonarPresencePlot, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of duration and sonar operations, for on-range data only, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Error bars show 95 percent confidence intervals.'>>=
print(NFD.depth.range.A$myplot)
@

<<NFD_depth_onrange_SonarPresencePlot2, fig.width=5, fig.height=5, fig.cap='Predicted dive duration as a function of duration and sonar operations, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)'>>=
print(NFD.depth.range.A$myplot3)
@


\section{Inter-foraging dive intervals}
\subsection{All data}
Prep data for plotting. Best model includes range-dependent sonar effects.
<<IFDI_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcIFDI_GAMM.RData")
IFDI.A <- plotPredictions(modelOrDredge=model.seln,
                        x="SonarAMinKm.fill", inputData=d, 
                        prettyXName='Range to Nearest\nSonar A Operation',
                        prettyYName='Inter-foraging Dive\nInterval Duration (min.)', 
                        ylims=c(50,300))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
IFDI.A$preds[1,]
@


<<IFDI_SonarAPlot1, fig.width=5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar A operation, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Shaded region shows 95 percent confidence interval.'>>=
print(IFDI.A$myplot)
@
Figure \ref{fig:IFDI_SonarAPlot1} shows a plot of the effect of range to Sonar A on IFDI Duration.

\clearpage
<<IFDI_SonarAPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar A operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(IFDI.A$myplot, IFDI.A$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:IFDI_SonarAPlot2} shows a plot of effect of range to Sonar A on IFDI duration, also showing no Sonar.


Prep data for plotting, Sonar B range effect:
<<IFDI_prepSonarB>>=
IFDI.B <- plotPredictions(model.seln, 'SonarBMinKm.fill', d, 
                            prettyXName='Range to Nearest\nSonar B Operation',
                        prettyYName='Inter-foraging Dive\nInterval Duration (min.)', 
                        ylims=c(50,300))
@


<<IFDI_SonarBPlot1, fig.width=5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(IFDI.B$myplot)
@
\clearpage
Figure \ref{fig:IFDI_SonarBPlot1} shows a plot of the effect of range to Sonar B on IFDI duration.



<<IFDI_SonarBPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(IFDI.B$myplot, IFDI.B$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:IFDI_SonarBPlot2} shows a plot of the effect of range to Sonar B on IFDI duration also including no Sonar.

\subsection{On-range data only}
Prep data for plotting. Best model includes range-dependent sonar effects.
<<IFDI_onrange_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcIFDI_GAMM_OnRange.RData")
IFDI.range.A <- plotPredictions(modelOrDredge=model.seln,
                        x="SonarAMinKm.fill", inputData=d, 
                        prettyXName='Range to Nearest\nSonar A Operation',
                        prettyYName='Inter-foraging Dive\nInterval Duration (min.)', 
                        ylims=c(-50,450), xlims=c(20,50))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
IFDI.range.A$preds[1,]
@

<<IFDI_onrange_SonarAPlot1, fig.width=5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar A operation, for on-range data only, from the best fitted model. (Values for all other predictors in the model were fixed at the values indicated above.)  Shaded region shows 95 percent confidence interval.'>>=
print(IFDI.range.A$myplot)
@
Figure \ref{fig:IFDI_onrange_SonarAPlot1} shows a plot of the effect of range to Sonar A on IFDI Duration, for on-range data only.

\clearpage
<<IFDI_onrange_SonarAPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar A operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(IFDI.range.A$myplot, IFDI.range.A$myplot2, 
                   nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:IFDI_onrange_SonarAPlot2} shows a plot of effect of range to Sonar A on IFDI duration, for on-range data only, also showing no Sonar.


Prep data for plotting, Sonar B range effect:
<<IFDI_onrange_prepSonarB>>=
IFDI.range.B <- plotPredictions(model.seln, 'SonarBMinKm.fill', d, 
                            prettyXName='Range to Nearest\nSonar B Operation',
                        prettyYName='Inter-foraging Dive\nInterval Duration (min.)', 
                        ylims=c(-20,800))
@


<<IFDI_onrange_SonarBPlot1, fig.width=5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar B operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(IFDI.range.B$myplot)
@
\clearpage
Figure \ref{fig:IFDI_onrange_SonarBPlot1} shows a plot of the effect of range to Sonar B on IFDI duration.



<<IFDI_onrange_SonarBPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted inter-foraging dive interval duration as a function of range to nearest Sonar B operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(IFDI.range.B$myplot, IFDI.range.B$myplot2,
                   nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:IFDI_onrange_SonarBPlot2} shows a plot of the effect of range to Sonar B on IFDI duration also including no Sonar.

\section{Forgaging dives}
\subsection{All data}
Prep data for plotting. Best model includes a range-dependent sonar B effect.
<<FD_prepSonarB>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcFD_GAMM.RData")
FD.B <- plotPredictions(modelOrDredge=dredge.out,
                        x="SonarBMinKm.fill", inputData=d, 
                        prettyXName='Range to Nearest\nSonar B Operation',
                        prettyYName='Foraging Dive\nDuration (min.)', 
                        ylims=c(40,110))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
FD.B$preds[1,]
@

<<FD_SonarBPlot1, fig.width=5, fig.height=5, fig.cap='Predicted foraging dive duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(FD.B$myplot)
@
\clearpage
Figure \ref{fig:FD_SonarBPlot1} shows a plot of the effect of range to Sonar B on FD duration.



<<FD_SonarBPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted foraging dive duration as a function of range to nearest Sonar B operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(FD.B$myplot, FD.B$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:FD_SonarBPlot2} shows a plot of the effect of range to Sonar B on FD duration also including no Sonar.


\subsection{On-range data only}
Prep data for plotting. Best model includes a range-dependent sonar B effect.
<<FD_onrange_prepSonarB>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcFD_GAMM_OnRange.RData")
FD.range.B <- plotPredictions(modelOrDredge=model.seln,
                        x="SonarBMinKm.fill", inputData=d, 
                        prettyXName='Range to Nearest\nSonar B Operation',
                        prettyYName='Foraging Dive\nDuration (min.)', 
                        ylims=c(40,140))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
FD.range.B$preds[1,]
@

<<FD_onrange_SonarBPlot1, fig.width=5, fig.height=5, fig.cap='Predicted foraging dive duration as a function of range to nearest Sonar B operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(FD.range.B$myplot)
@
\clearpage
Figure \ref{fig:FD_onrange_SonarBPlot1} shows a plot of the effect of range to Sonar B on FD duration, for on-range data only.



<<FD_onrange_SonarBPlot2, fig.width=6.5, fig.height=5, fig.cap='Predicted foraging dive duration as a function of range to nearest Sonar B operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region and error bars show 95 percent confidence intervals.'>>=
print(grid.arrange(FD.range.B$myplot, FD.range.B$myplot2, nrow=1, widths=c(3,1)))
@
\clearpage
Figure \ref{fig:FD_onrange_SonarBPlot2} shows a plot of the effect of range to Sonar B on FD duration also including no Sonar.

\section{Surface intervals}
\subsection{All data}
Prep data for plotting. Best model includes an on/off sonar effect.
<<Surf_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcSurf_GAMM.RData")
Surf.A <- plotPredictions(modelOrDredge=model.seln,
                        x="SonarPresence", inputData=d, 
                        prettyXName='Sonar in Operation',
                        prettyYName='Surface Interval \nDuration (min.)', 
                        ylims=c(1,6))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
Surf.A$preds
@

<<Surf_SonarAPlot1, fig.width=5, fig.height=5, fig.cap='Predicted surface interval duration as a function of sonar type in operation, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(Surf.A$myplot)
@
\clearpage
Figure \ref{fig:Surf_SonarAPlot1} shows a plot of the effect of sonar on surface interval duration.

\subsection{On-range data only}
Prep data for plotting. Best model includes on-off sonar effects.
<<Surf_onrange_prepSonarA>>=
rm(list = setdiff(ls(), lsf.str()))
load("ZcSurf_GAMM_OnRange.RData")
Surf.range.A <- plotPredictions(modelOrDredge=model.seln,
                        x="SonarPresence", inputData=d, 
                        prettyXName='Sonar in Operation',
                        prettyYName='Surface Interval \nDuration (min.)', 
                        ylims=c(1,6))
@

Values for variables other than sonar presence were determined as described previously.

<<>>=
Surf.range.A$preds
@

<<Surf_onrange_SonarAPlot1, fig.width=5, fig.height=5, fig.cap='Predicted surface interval duration as a function of sonar operation, for on-range data only, from the best fitted model.  (Values for all other predictors in the model were fixed at the values indicated above.) Shaded region shows 95 percent confidence interval.' >>=
print(Surf.range.A$myplot)
@
\clearpage
Figure \ref{fig:Surf_onrange_SonarAPlot1} shows a plot of the effect of sonar operation on surface interval duration, for on-range data only.

\end{document}